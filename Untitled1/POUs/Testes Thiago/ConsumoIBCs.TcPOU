<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.14">
  <POU Name="ConsumoIBCs" Id="{e3cf5dcc-0939-4c45-ae7d-321aff5c6492}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM ConsumoIBCs
VAR PERSISTENT
	ConsumoDiario	:ARRAY[1..12] OF REAL;	//Array com o consumo diário do IBC
	ConsumoSemanal	:ARRAY[1..12] OF REAL;	//Array com o consumo semanal do IBC
	ConsumoMensal	:ARRAY[1..12] OF REAL;	//Array com o consumo mensal do IBC
	ValorAtual		:ARRAY[1..12] OF REAL;	//Valor atual do IBC
	ValorInicial	:ARRAY[1..12] OF REAL;	//Peso dos IBCs no inicio do dia
	UltimosDias		:ARRAY[1..12] OF ARRAY[1..30] OF REAL;	//Array com o consumo dos últimos 30 dias
	
	DiaAtual	:WORD;
	SemanaAtual	:WORD;
	MesAtual	:WORD;
	
	Reabastecimento	:ARRAY[1..12] OF REAL;	//Essa variável é usada para detectar se o IBC foi abastecido
	
	//Configurações da média móvel
	Amostras	:INT;	//Quantidade de amostras
	Tempo		:DINT;	//Tempo de amostragem (s)
END_VAR

VAR
	iCounter: INT;
	TON_ConsumoIBC: TON;
	VarAux	:ARRAY[1..12] OF REAL;
	MediaM	:ARRAY[1..12] OF MediaMovel;
	iCounter2: INT;
	Teste: BOOL;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[//Esse programa calcula o consumo diário dos IBCs
MediaM[1](Input:= , Amostras:= , Tempo:= , Output=> );

Amostras	:= 10;
Tempo		:= 2;
//Salva os valores atuais dos IBCs no array já com a média móvel aplicada
MediaM[1](Input:=Entradas.PU1_WT1_rValue_REAL, Amostras:= Amostras, Tempo:= Tempo, Output=> ValorAtual[1]);
MediaM[2](Input:=Entradas.PU1_WT2_rValue_REAL, Amostras:= Amostras, Tempo:= Tempo, Output=> ValorAtual[2]);
MediaM[3](Input:=Entradas.PU1_WT3_rValue_REAL, Amostras:= Amostras, Tempo:= Tempo, Output=> ValorAtual[3]);
MediaM[4](Input:=Entradas.PU1_WT4_rValue_REAL, Amostras:= Amostras, Tempo:= Tempo, Output=> ValorAtual[4]);
MediaM[5](Input:=Entradas.PU2_WT5_rValue_REAL, Amostras:= Amostras, Tempo:= Tempo, Output=> ValorAtual[5]);
MediaM[6](Input:=Entradas.PU2_WT6_rValue_REAL, Amostras:= Amostras, Tempo:= Tempo, Output=> ValorAtual[6]);
MediaM[7](Input:=Entradas.PU2_WT7_rValue_REAL, Amostras:= Amostras, Tempo:= Tempo, Output=> ValorAtual[7]);
MediaM[8](Input:=Entradas.PU2_WT8_rValue_REAL, Amostras:= Amostras, Tempo:= Tempo, Output=> ValorAtual[8]);
MediaM[9](Input:=Entradas.PU3_WT9_rValue_REAL, Amostras:= Amostras, Tempo:= Tempo, Output=> ValorAtual[9]);
MediaM[10](Input:=Entradas.PU3_WT10_rValue_REAL, Amostras:= Amostras, Tempo:= Tempo, Output=> ValorAtual[10]);
MediaM[11](Input:=Entradas.PU3_WT11_rValue_REAL, Amostras:= Amostras, Tempo:= Tempo, Output=> ValorAtual[11]);
MediaM[12](Input:=Entradas.PU3_WT12_rValue_REAL, Amostras:= Amostras, Tempo:= Tempo, Output=> ValorAtual[12]);

//Ao trocar o dia, o cálculo é zerado
IF DiaAtual <> Main.fbTime.systemTime.wDay OR Teste THEN
	FOR iCounter := 1 TO 12 BY 1 DO
		//Faz o shift no array dos consumos dos ultimos dias
		FOR iCounter2 := 1 TO 29 BY 1 DO
			UltimosDias[iCounter][iCounter2] := UltimosDias[iCounter][iCounter2 + 1];
		END_FOR
		
		//Salva o consumo do dia na ultima posição do array de histórico
		UltimosDias[iCounter][30] := ConsumoDiario[iCounter];
		
		ConsumoDiario[iCounter] := 0;						//Zera o array de consumo diário
		VarAux[iCounter]		:= ValorAtual[iCounter];	//Configura o array auxiliar
	END_FOR
	
	//Configura o valor inicial dos IBCs
	ValorInicial[1] := Entradas.PU1_WT1_rValue_REAL;
	ValorInicial[2] := Entradas.PU1_WT2_rValue_REAL;
	ValorInicial[3] := Entradas.PU1_WT3_rValue_REAL;
	ValorInicial[4] := Entradas.PU1_WT4_rValue_REAL;
	ValorInicial[5] := Entradas.PU2_WT5_rValue_REAL;
	ValorInicial[6] := Entradas.PU2_WT6_rValue_REAL;
	ValorInicial[7] := Entradas.PU2_WT7_rValue_REAL;
	ValorInicial[8] := Entradas.PU2_WT8_rValue_REAL;
	ValorInicial[9] := Entradas.PU3_WT9_rValue_REAL;
	ValorInicial[10] := Entradas.PU3_WT9_rValue_REAL;
	ValorInicial[11] := Entradas.PU3_WT9_rValue_REAL;
	ValorInicial[12] := Entradas.PU3_WT9_rValue_REAL;
	
	//Atualiza o dia atual
	DiaAtual := Main.fbTime.systemTime.wDay;
	Teste := FALSE;
END_IF


/////////////A VarAux, salvará a ultima subtração. Se a subtração atual for menor que a anterior, ocorreu abastecimento

//O cálculo do consumo ocorrerá a cada 1 minuto
TON_ConsumoIBC(IN:= NOT TON_ConsumoIBC.Q, PT:= T#1M, Q=> , ET=> );

IF TON_ConsumoIBC.Q THEN
	FOR iCounter := 1 TO 12 BY 1 DO
		IF ValorAtual[iCounter] < VarAux[iCounter] THEN
			ConsumoDiario[iCounter] := ConsumoDiario[iCounter] + (VarAux[iCounter] - ValorAtual[iCounter]);
		END_IF
		VarAux[iCounter] := ValorAtual[iCounter];
	END_FOR;
END_IF;

//ConsumoDiario[iCounter] := ValorInicial[iCounter] - ValorAtual[iCounter];

]]></ST>
    </Implementation>
    <LineIds Name="ConsumoIBCs">
      <LineId Id="5" Count="0" />
      <LineId Id="137" Count="0" />
      <LineId Id="151" Count="0" />
      <LineId Id="136" Count="0" />
      <LineId Id="142" Count="0" />
      <LineId Id="78" Count="11" />
      <LineId Id="76" Count="1" />
      <LineId Id="25" Count="0" />
      <LineId Id="7" Count="0" />
      <LineId Id="145" Count="0" />
      <LineId Id="162" Count="0" />
      <LineId Id="156" Count="1" />
      <LineId Id="160" Count="0" />
      <LineId Id="163" Count="0" />
      <LineId Id="166" Count="0" />
      <LineId Id="165" Count="0" />
      <LineId Id="164" Count="0" />
      <LineId Id="161" Count="0" />
      <LineId Id="158" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="59" Count="1" />
      <LineId Id="47" Count="11" />
      <LineId Id="61" Count="0" />
      <LineId Id="63" Count="0" />
      <LineId Id="62" Count="0" />
      <LineId Id="195" Count="0" />
      <LineId Id="11" Count="0" />
      <LineId Id="28" Count="0" />
      <LineId Id="95" Count="0" />
      <LineId Id="94" Count="0" />
      <LineId Id="69" Count="0" />
      <LineId Id="65" Count="0" />
      <LineId Id="64" Count="0" />
      <LineId Id="98" Count="0" />
      <LineId Id="67" Count="0" />
      <LineId Id="93" Count="0" />
      <LineId Id="101" Count="0" />
      <LineId Id="146" Count="1" />
      <LineId Id="154" Count="0" />
      <LineId Id="73" Count="0" />
      <LineId Id="71" Count="0" />
      <LineId Id="43" Count="0" />
      <LineId Id="41" Count="0" />
      <LineId Id="6" Count="0" />
      <LineId Id="42" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>